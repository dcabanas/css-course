.container {
    margin: 20px;
    height: 500px;
    display: grid;
    /*
        by using grid the default behaviour is creating only one column and as many rows
        as the number of the child elements the parent (grid) element has
     */
    grid-template-columns: 200px 2fr 20% 1fr;
    /*
        grid-template-columns allows us to override the number of columns we want
        each value indicates the widt of each column, and fr (fraction) means that the reamining
        space available will be distributed according the fraction of each collumn with fr specified
     */
    grid-template-rows: 5rem 2.5rem;
    /*
        the last argument (of the above) can also be auto to occupy the remaining available space
     */
    /*
        grid-template-columns: repeat(4, 25%);
        grid-template-rows: 5rem minmax(10px, 200px) 100px;
    */
    grid-column-gap: 20px;
    grid-row-gap: 10px;
    /* grid-gap: 10px 20px; shorthand for the two above */
    grid-template-areas: "header header header header"
                         ". . main main";
                         "footer footer footer footer";
}

.el1 {
    background: rgba(255, 154, 72, 0.5);
}

.el2 {
    background: rgba(255, 0, 0, 0.5);
    /*grid-column-start: 1;
    grid-column-end: -1;
    !* grid-column: 1 / -1; shorthand notation of the two above *!
    grid-row-start: 2;
    grid-row-end: span 1;
    !* grid-row: 2 / span 1; shorthand notation of the two above *!
    z-index: 10;*/
    /*
        child can overlap on the grid
     */
    grid-area: main;
}

.el3 {
    background: rgba(0, 128, 0, 0.5);
    /*grid-column-start: 3;
    grid-column-end: 5; !* grid-column-end: span 2; *!
    grid-row-start: 1;
    grid-row-end: 3;*/
    /*  grid-area: 1 / 3 / 3 / 5; shorthand for the 4 above */
    /*
        these properties allows us to define how to position the child in the grid
        in this example the third child will occupy the last two columns and first and second row
     */
    grid-area: header;
}

.el4 {
    background: rgba(0, 4, 255, 0.5);
}