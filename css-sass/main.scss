@import "_variables";
@import "typography";

/*
  mixins are our custom functions to reuse some piece of code
 */
@mixin display-flex() {
  display: -webkit-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin media-min-width($width) {
  @media (min-width: $width) {
    @content; // content will be body we will inject when calling the mixin
  }
}

html {
  @include media-min-width(40rem) {
    font-size: 125%;
  }

  font-size: 94.75%;
}

body {
  font-family: Arial, sans-serif;
  margin: 0;
}

.container {
  @include display-flex();
  @include media-min-width(40rem) {
    padding: 3rem 0;
  }
  /*
    properties that start with the same prefix, can be nested in a object like this
   */
  flex: {
    direction: column;
    wrap: nowrap;
  };
  align-items: center;
  //padding: 3rem 0;
  padding: $size-default*3 0;
  box-sizing: border-box;
}

.sass-section {
  border: $border-default;
  //background: #fae5ff;
  background: lighten(map-get($colors, main), 72.5%);
  padding: $size-default*2;
  text-align: center;
  width: 90%;
  box-sizing: border-box;

  @include media-min-width(40rem) {
    width: 30rem;
  }
}

.sass-introduction {
  @extend .sass-section;

  box-shadow: $size-tiny $size-tiny $size-tiny/2 #ccc;

  p {
    margin: 0;
  }
}

.sass-details {
  @extend .sass-section;

  margin: $size-default*2 0;
}

.section-header {
  border-bottom: 0.05rem solid map-get($colors, main);

  h1 {
    margin: 0 0 1rem 0;
  }
}

.documentation-links {
  @include display-flex();

  list-style: none;
  margin: 1rem 0 0 0;
  padding: 0;
  flex-direction: column;

  li {
    margin: 0.2rem 0;
    background: white;
  }

  .documentation-link {
    text-decoration: none;
    color: $main-color;
    display: block;
    padding: 0.2rem;
    border: $border-default;

    // & also works with classes
    &:hover, &:active {
      color: white;
      background: map-get($colors, secondary);;
      border-color: map-get($colors, secondary);;
    }
  }
}
